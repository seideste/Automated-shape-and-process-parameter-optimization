/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  9
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       dictionary;
    object      snappyHexMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// Which of the steps to run
castellatedMesh true;
snap            true;
addLayers       true;


geometry
{
    wall.stl
    {
        type triSurfaceMesh;
        name wall;
    }
	 shaft.stl
    {
        type triSurfaceMesh;
        name shaft;
    }
	 stirrer.stl
    {
        type triSurfaceMesh;
        name stirrer;
    }
	
	 lid.stl
    {
        type triSurfaceMesh;
        name lid;
    }
	 rotating.stl
    {
        type triSurfaceMesh;
        name rotating;
    }
	
	
};

castellatedMeshControls
{
    
    maxLocalCells 50000000;
    maxGlobalCells 50000000;
    minRefinementCells 0;  
    nCellsBetweenLevels 2;

    features
    (
        {file "wall.eMesh"; level 2;}
        {file "stirrer.eMesh"; level 3;}
        {file "shaft.eMesh"; level 3;}
        {file "lid.eMesh"; level 2;}
        {file "rotating.eMesh"; level 2;}

    );

    refinementSurfaces
    {
        wall
        {
            level (1 3);
            patchInfo
            {
                type wall;
                inGroups (meshedWalls);
            }
        }
		stirrer
        {
            level (2 4);
            patchInfo
            {
                type wall;
                inGroups (meshedWalls);
            }
        }
		
		shaft
        {
            level (2 3);
            patchInfo
            {
                type wall;
                inGroups (meshedWalls);
            }
        }
		lid
        {
            level (2 3);
            patchInfo
            {
                type symmetry;
                inGroups (meshedPatch);
            }
        }
    		
	rotating
	{
            level       (1 2);
            faceZone    rotating;
            cellZone    rotating;
            cellZoneInside  inside;
	}
	

    }

    resolveFeatureAngle 75;


   
    refinementRegions
    {
    }

  
    locationInMesh (0.05 0.05 0.4); // Inside point

    
    allowFreeStandingZoneFaces true;
}



snapControls
{
  
    nSmoothPatch 3;
    tolerance 1;
    nSolveIter 300;
    nRelaxIter 10;
    nFeatureSnapIter 20;
	implicitFeatureSnap false;
	explicitFeatureSnap true;
	multiRegionFeatureSnap false;
}



addLayersControls
{

    relativeSizes true;
    layers
    {
	
	wall
        {
            nSurfaceLayers      3;
            expansionRatio      1.3;
            finalLayerThickness 0.5;
            minThickness        0.1;
        }

lid
        {
            nSurfaceLayers      3;
            expansionRatio      1.3;
            finalLayerThickness 0.5;
            minThickness        0.1;
        }        
    }

    expansionRatio 1.0;
    finalLayerThickness 0.3;
    minThickness 0.25;
	nGrow 0;
    featureAngle 30;
    nRelaxIter 5;
    nSmoothSurfaceNormals 1;
    nSmoothNormals 3;
    nSmoothThickness 10;
    maxFaceThicknessRatio 0.5;
    maxThicknessToMedialRatio 0.3;
    minMedianAxisAngle 90;
    nBufferCellsNoExtrude 0;
    nLayerIter 50;
    nRelaxedIter 20;
}


meshQualityControls
{
    maxNonOrtho 70;
    maxBoundarySkewness 20;
    maxInternalSkewness 4;
    maxConcave 80;
    minVol 1e-13;
    minTetQuality 1e-30;
    minArea -1;
    minTwist 0.05;
    minDeterminant 0.001;
    minFaceWeight 0.05;
    minVolRatio 0.01;
    minTriangleTwist -1;
    nSmoothScale 4;
    errorReduction 0.75;
    relaxed
    {maxNonOrtho 75;}
}


debug 0;
mergeTolerance 1E-6;
// ************************************************************************* //
